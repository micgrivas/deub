# Default values for deub-helm variables, for which environment (e.g. dev)
# Those will be used, if not in the specific environment values (value.<ENV>.yaml)

replicaCount: 2

image:
  # NGINX-Demos/nginx-hello exists in decker hub
  repository: nginxdemos/hello
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  allowPrivilegeEscalation: true
  # The port that will be used in the container - the nginxdemos/hello uses a fixed port 80
  containerPort: 80

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: deub-helm
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: 
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /    
  hosts:
    - host: deub.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: deub-tls
  #    hosts:
  #      - deub.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 97

nodeSelector: {}

tolerations: []

affinity: {}
